{"version":3,"sources":["components/routes/projects/routes/Todo.js"],"names":["Todo","props","state","newItem","list","todoValue","id","Date","now","value","isDone","appList","this","updatedList","push","setState","filter","item","map","val","input","className","src","alt","width","height","role","aria-label","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","key","checked","toggleItem","deleteItem","React","Component"],"mappings":"qLAeMA,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,GACTC,KAAM,IAJK,E,qEAQXC,GACJ,GAAkB,KAAdA,EAAkB,CAClB,IAAMF,EAAU,CACZG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAENC,EAAUC,KAAKV,MACfW,EAAW,YAAOF,EAAQP,MAChCS,EAAYC,KAAKX,GACjBS,KAAKG,SAAS,CACVX,KAAMS,EACNV,QAAS,Q,iCAKVG,GAAK,IACJF,EAASQ,KAAKV,MAAdE,KAEFS,EADO,YAAOT,GACQY,OAAO,SAAAC,GAAI,OAAIA,EAAKX,KAAOA,IACvDM,KAAKG,SAAS,CACVX,KAAMS,M,iCAIHP,GAAK,IAENO,EADWD,KAAKV,MAAdE,KACiBc,IAAI,SAAAC,GACzB,OAAIA,EAAIb,KAAOA,EACHa,EAAIT,QAAUS,EAAIT,OAEvBS,IAEXP,KAAKG,SAASF,K,kCAGNO,GACRR,KAAKG,SAAS,CACVZ,QAASiB,M,+BAIP,IAAD,SACqBR,KAAKV,MAAvBE,EADH,EACGA,KAAMD,EADT,EACSA,QACd,OACI,yBAAKkB,UAAU,sBACX,yBAAKC,IAAI,kBAAkBC,IAAI,OAAOF,UAAU,kBAAkBG,MAAM,MAAMC,OAAO,QACrF,wBAAIJ,UAAU,0BAAd,wBAEI,0BAAMK,KAAK,MAAMC,aAAW,eAA5B,iBAIJ,yBAAKN,UAAU,8BAAf,iBAEI,6BACA,2BACIO,KAAK,OACLP,UAAU,wBACVQ,YAAY,eACZC,UAAQ,EACRrB,MAAON,EACP4B,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOzB,UAE7C,4BACImB,KAAK,SACLP,UAAU,8BACVc,QAAS,kBAAM,EAAKC,QAAQjC,IAC5BkC,UAAWlC,EAAQmC,QAJvB,YAQA,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,iBACTjB,EAAKc,IAAI,SAAAD,GAAI,OACV,wBAAIsB,IAAKtB,EAAKX,GAAIe,UAAU,yBACxB,2BACIO,KAAK,WACLP,UAAU,6BACVmB,QAASvB,EAAKP,OACdqB,SAAU,WACN,EAAKU,WAAWxB,EAAKX,OAG7B,0BAAMe,UAAWJ,EAAKP,OAAS,YAAc,IAAKO,EAAKR,OACvD,4BACImB,KAAK,SACLP,UAAU,6BACVc,QAAS,kBAAM,EAAKO,WAAWzB,EAAKX,MAHxC,qB,GA/FjBqC,IAAMC,WAgHV5C","file":"static/js/6.b3f6ba2d.chunk.js","sourcesContent":["import React from 'react';\n\n// Functional Component for reference\n// function App() {\n//     return (\n//         <div className=\"App\">\n//             <header className=\"App-header\">\n//                 <img src={logo} alt=\"logo\" className=\"App-logo\" />\n//                 <p>Learning React functional</p>\n//             </header>\n//         </div>\n//     );\n// }\n\n// Class based component\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newItem: '',\n            list: [],\n        };\n    }\n\n    addItem(todoValue) {\n        if (todoValue !== '') {\n            const newItem = {\n                id: Date.now(),\n                value: todoValue,\n                isDone: false,\n            };\n            const appList = this.state;\n            const updatedList = [...appList.list];\n            updatedList.push(newItem);\n            this.setState({\n                list: updatedList,\n                newItem: '',\n            });\n        }\n    }\n\n    deleteItem(id) {\n        const { list } = this.state;\n        const newList = [...list];\n        const updatedList = newList.filter(item => item.id !== id);\n        this.setState({\n            list: updatedList,\n        });\n    }\n\n    toggleItem(id) {\n        const { list } = this.state;\n        const updatedList = list.map(val => {\n            if (val.id === id) {\n                return (val.isDone = !val.isDone);\n            }\n            return val;\n        });\n        this.setState(updatedList);\n    }\n\n    updateInput(input) {\n        this.setState({\n            newItem: input,\n        });\n    }\n\n    render() {\n        const { list, newItem } = this.state;\n        return (\n            <div className=\"bg-secondary h-100\">\n                <img src=\"images/logo.svg\" alt=\"logo\" className=\"d-block mx-auto\" width=\"200\" height=\"200\" />\n                <h1 className=\"text-white text-center\">\n                    Simple React Todo app\n                    <span role=\"img\" aria-label=\"wink-smiley\">\n                        ðŸ˜‰\n                    </span>\n                </h1>\n                <div className=\"container text-white w-100\">\n                    Add an Item...\n                    <br />\n                    <input\n                        type=\"text\"\n                        className=\"input-text w-100 my-3\"\n                        placeholder=\"Write a Todo\"\n                        required\n                        value={newItem}\n                        onChange={e => this.updateInput(e.target.value)}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-block my-3\"\n                        onClick={() => this.addItem(newItem)}\n                        disabled={!newItem.length}\n                    >\n                        Add Todo\n                    </button>\n                    <div className=\"list my-3\">\n                        <ul className=\"list-unstyled\">\n                            {list.map(item => (\n                                <li key={item.id} className=\"my-4 font-weight-bold\">\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"text-primary mx-1 checkbox\"\n                                        checked={item.isDone}\n                                        onChange={() => {\n                                            this.toggleItem(item.id);\n                                        }}\n                                    />\n                                    <span className={item.isDone ? 'completed' : ''}>{item.value}</span>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-danger float-right\"\n                                        onClick={() => this.deleteItem(item.id)}\n                                    >\n                                        Delete\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Todo;\n"],"sourceRoot":""}