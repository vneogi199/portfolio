{"version":3,"sources":["components/Sidebar.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","bigAvatar","margin","width","height","SampleFab","classes","Grid","container","justify","alignItems","className","Avatar","alt","src","Sidebar","style","zIndex","Icon","href","to","activeClassName","target","rel","React","Component","Projects","lazy","Education","MainContent","fallback","exact","path","render","component","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uSAOMA,EAAYC,YAAW,CACzBC,UAAW,CACPC,OAAQ,GACRC,MAAO,IACPC,OAAQ,OAIVC,EAAY,WACd,IAAMC,EAAUP,IAChB,OACI,kBAACQ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,UAAU,QAC3D,kBAACC,EAAA,EAAD,CAAQC,IAAI,cAAcC,IAAI,oBAAoBH,UAAWL,EAAQL,cA6FlEc,E,iLAtFP,OACI,yBAAKJ,UAAU,wDAAwDK,MAAO,CAAEC,OAAQ,MACpF,kBAAC,EAAD,MACA,wBAAIN,UAAU,sCAAd,eACA,yBAAKA,UAAU,sCACX,kBAACO,EAAA,EAAD,CAAMP,UAAU,4BAAhB,gBACA,2BACI,uBAAGQ,KAAK,6BAA6BR,UAAU,wBAA/C,yBAKR,yBAAKA,UAAU,kDACX,wBAAIA,UAAU,kBACV,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,iCACZ,kBAAC,IAAD,CAASS,GAAG,IAAIT,UAAU,aAAaU,gBAAgB,aACnD,kBAACH,EAAA,EAAD,CAAMP,UAAU,QAAhB,UADJ,mBAOZ,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,iCACZ,kBAAC,IAAD,CAASS,GAAG,YAAYT,UAAU,aAAaU,gBAAgB,aAC3D,kBAACH,EAAA,EAAD,CAAMP,UAAU,QAAhB,YADJ,eAOZ,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,oDACZ,kBAAC,IAAD,CAASS,GAAG,cAAcT,UAAU,aAAaU,gBAAgB,aAC7D,kBAACH,EAAA,EAAD,CAAMP,UAAU,QAAhB,eACA,gDAKhB,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,iCACZ,kBAAC,IAAD,CAASS,GAAG,UAAUT,UAAU,aAAaU,gBAAgB,aACzD,kBAACH,EAAA,EAAD,CAAMP,UAAU,QAAhB,aADJ,aAOZ,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,iCACZ,kBAAC,IAAD,CAASS,GAAG,aAAaT,UAAU,aAAaU,gBAAgB,aAC5D,kBAACH,EAAA,EAAD,CAAMP,UAAU,QAAhB,UADJ,gBAOZ,wBAAIA,UAAU,QACV,4BACI,0BAAMA,UAAU,iCACZ,uBACIQ,KAAK,wEACLR,UAAU,aACVW,OAAO,SACPC,IAAI,uBAEJ,kBAACL,EAAA,EAAD,CAAMP,UAAU,QAAhB,eANJ,oB,GArEda,IAAMC,W,QCrBtBC,EAAWC,eAAK,kBAAM,+BACtBC,EAAYD,eAAK,kBAAM,qDAiBdE,GAhBFF,eAAK,kBAAM,+B,iLAIhB,OACI,kBAAC,WAAD,CAAUG,SAAU,4CAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,wCACpC,kBAAC,IAAD,CAAOD,KAAK,YAAYE,UAAWR,IACnC,kBAAC,IAAD,CAAOM,KAAK,aAAaE,UAAWN,U,GAP9BJ,IAAMC,YCiBjBU,E,iLAjBP,OACI,kBAAC,IAAD,KACI,yBAAKxB,UAAU,uBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,8BACX,kBAAC,EAAD,c,GAVVa,IAAMC,WCOJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASR,OAAO,kBAAC,EAAD,MAASS,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.d2710bd6.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    bigAvatar: {\n        margin: 10,\n        width: 250,\n        height: 250,\n    },\n});\n\nconst SampleFab = () => {\n    const classes = useStyles();\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\" className=\"py-5\">\n            <Avatar alt=\"Vinit Neogi\" src=\"images/photo2.jpg\" className={classes.bigAvatar} />\n        </Grid>\n    );\n};\n\nclass Sidebar extends React.Component {\n    render() {\n        return (\n            <div className=\"text-white bg-dark h-100 m-0 shadow position-relative\" style={{ zIndex: 100 }}>\n                <SampleFab />\n                <h1 className=\"d-flex justify-content-center my-4\">Vinit Neogi</h1>\n                <div className=\"d-flex justify-content-center my-4\">\n                    <Icon className=\"d-flex align-self-center\">mail_outline</Icon>\n                    <u>\n                        <a href=\"mailto:vneogi199@gmail.com\" className=\"my-0 mx-2 text-white\">\n                            vneogi199@gmail.com\n                        </a>\n                    </u>\n                </div>\n                <div className=\"my-3 d-flex justify-content-center text-center\">\n                    <ul className=\"list-unstyled \">\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center\">\n                                    <NavLink to=\"/\" className=\"text-white\" activeClassName=\"is-active\">\n                                        <Icon className=\"mx-3\">person</Icon>\n                                        INTRODUCTION\n                                    </NavLink>\n                                </span>\n                            </h4>\n                        </li>\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center\">\n                                    <NavLink to=\"/projects\" className=\"text-white\" activeClassName=\"is-active\">\n                                        <Icon className=\"mx-3\">computer</Icon>\n                                        PROJECTS\n                                    </NavLink>\n                                </span>\n                            </h4>\n                        </li>\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center align-items-center\">\n                                    <NavLink to=\"/experience\" className=\"text-white\" activeClassName=\"is-active\">\n                                        <Icon className=\"mx-3\">trending_up</Icon>\n                                        <span>EXPERIENCE</span>\n                                    </NavLink>\n                                </span>\n                            </h4>\n                        </li>\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center\">\n                                    <NavLink to=\"/skills\" className=\"text-white\" activeClassName=\"is-active\">\n                                        <Icon className=\"mx-3\">bar_chart</Icon>\n                                        SKILLS\n                                    </NavLink>\n                                </span>\n                            </h4>\n                        </li>\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center\">\n                                    <NavLink to=\"/education\" className=\"text-white\" activeClassName=\"is-active\">\n                                        <Icon className=\"mx-3\">school</Icon>\n                                        EDUCATION\n                                    </NavLink>\n                                </span>\n                            </h4>\n                        </li>\n                        <li className=\"my-4\">\n                            <h4>\n                                <span className=\"d-flex justify-content-center\">\n                                    <a\n                                        href=\"https://docs.google.com/file/d/1qeere0qy6E1fKrPHsr5siGCYr2r9xdOs/view\"\n                                        className=\"text-white\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        <Icon className=\"mx-3\">description</Icon>\n                                        RESUME\n                                    </a>\n                                </span>\n                            </h4>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nconst Projects = lazy(() => import('./routes/projects/Projects'));\nconst Education = lazy(() => import('./routes/education/Education'));\nconst Todo = lazy(() => import('./routes/projects/routes/Todo'));\n\nclass MainContent extends React.Component {\n    render() {\n        return (\n            <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <div>Home</div>} />\n                    <Route path=\"/projects\" component={Projects} />\n                    <Route path=\"/education\" component={Education} />\n                </Switch>\n            </Suspense>\n        );\n    }\n}\n\nexport default MainContent;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport MainContent from './components/MainContent';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"w-100 h-100 m-0 p-0\">\n                    <div className=\"row w-100 h-100\">\n                        <div className=\"col-3 m-0 p-0\">\n                            <Sidebar />\n                        </div>\n                        <div className=\"col-9 m-0 p-0 bg-secondary\">\n                            <MainContent />\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}